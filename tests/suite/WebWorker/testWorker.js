var h="broadcast-sync",b="browser-message-broker";function u(e){return e.subsKey===h}function g(e){return e.senderId!=null&&e.targetId==null}function f(e){return e.senderId!=null&&e.targetId!=null}var n=Math.random().toString(36).substring(2,9);function B(e,t=1){let s;return(...r)=>{clearTimeout(s),s=setTimeout(()=>{e(...r)},t)}}var _=class{constructor(){if(this.senderId=n,this.state=new Map,this.subscribers=new Map,this.braodcasts=new Set,this.__bcChannel=new BroadcastChannel(b),globalThis.constructor.name==="Window"){let e=new CustomEvent("bmb-ready",{detail:this});globalThis.document.dispatchEvent(e)}this.__bcChannel.onmessage=this.handleBroadcast.bind(this),this.__bcChannel.onmessageerror=this.handleBroadcastError.bind(this),this.sendBrokerState=B(this.__sendBrokerState.bind(this),2),this.sendBrokerState()}handleBroadcastError(e){throw Error("BROADCAST FAILED: "+e.data)}__sendBrokerState(e,t){let s=Array.from(this.braodcasts.keys());t&&t.length>0&&(s=s.filter(a=>t.includes(a)));let r={};for(let a of this.state)!a[1]||!s.includes(a[0])||(r[a[0]]=a[1]);let i={id:n,availableState:r,broadcasts:s},o={subsKey:h,senderCtx:globalThis.constructor.name,senderId:n,targetId:e,msg:i};this.__bcChannel.postMessage(o)}handleBroadcastSync(e){if(g(e))return this.sendBrokerState(e.senderId,e.msg.broadcasts);if(f(e))for(let t of Object.entries(e.msg.availableState))this.braodcasts.has(t[0])&&this.state.has(t[0])&&this.state.get(t[0])==null&&this.__notifySubscribers(t[0],t[1],e.senderId)}handleBroadcast(e){if(console.log("BROADCAST RECEIVED: ",e.data),!(e.data.targetId!=null&&e.data.targetId!==n))return u(e.data)?this.handleBroadcastSync(e.data):this.__notifySubscribers(e.data.subsKey,e.data.msg,e.data.senderId)}__configureBroadcast(e){if(!e.key)throw new Error("Invalid subscription");this.braodcasts.add(e.key);let t=e.dispose;e.dispose=()=>{t(),this.braodcasts.delete(e.key)},e.isBroadcast=!0,this.sendBrokerState()}GetState(e){if(e)return this.state.get(e)}async Publish(e,t,s){if(await this.__notifySubscribers(e,t,n),!this.braodcasts.has(e))return;let r={subsKey:e,senderCtx:globalThis.constructor.name,senderId:n,targetId:s,msg:t};this.__bcChannel.postMessage(r)}Subscribe(e,t,s=!1,r=!0){let i=this.subscribers.get(e)||[],o=t;i.push(o),this.subscribers.set(e,i);let a={key:e,isCached:!1,dispose:()=>{i.splice(i.indexOf(o),1),a.isDisposed=!0},publish:(l,c)=>this.Publish(e,l,c),isDisposed:!1};return s&&this.__configureBroadcast(a),r&&this.state.set(e,void 0),a}async __notifySubscribers(e,t,s){let r=this.subscribers.get(e)||[],i=[];for(let o of r)!o||i.push(Promise.resolve(o(t,s)));await Promise.all(i),this.state.has(e)&&this.state.set(e,t)}};globalThis.BrowserMessageBroker=globalThis.BrowserMessageBroker||new _;var d=globalThis.BrowserMessageBroker;var y=d.Subscribe("testResp",void 0,!0),w=d.Subscribe("testReq",e=>{d.Publish("testResp",{payload:"response"})},!0);postMessage("ready");
//# sourceMappingURL=testWorker.js.map
