"use strict";(()=>{var K=(e,t)=>t.some(s=>e instanceof s),S,B;function Y(){return S||(S=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function U(){return B||(B=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}var A=new WeakMap,y=new WeakMap,L=new WeakMap,w=new WeakMap,I=new WeakMap;function H(e){let t=new Promise((s,r)=>{let n=()=>{e.removeEventListener("success",o),e.removeEventListener("error",a)},o=()=>{s(b(e.result)),n()},a=()=>{r(e.error),n()};e.addEventListener("success",o),e.addEventListener("error",a)});return t.then(s=>{s instanceof IDBCursor&&A.set(s,e)}).catch(()=>{}),I.set(t,e),t}function z(e){if(y.has(e))return;let t=new Promise((s,r)=>{let n=()=>{e.removeEventListener("complete",o),e.removeEventListener("error",a),e.removeEventListener("abort",a)},o=()=>{s(),n()},a=()=>{r(e.error||new DOMException("AbortError","AbortError")),n()};e.addEventListener("complete",o),e.addEventListener("error",a),e.addEventListener("abort",a)});y.set(e,t)}var _={get(e,t,s){if(e instanceof IDBTransaction){if(t==="done")return y.get(e);if(t==="objectStoreNames")return e.objectStoreNames||L.get(e);if(t==="store")return s.objectStoreNames[1]?void 0:s.objectStore(s.objectStoreNames[0])}return b(e[t])},set(e,t,s){return e[t]=s,!0},has(e,t){return e instanceof IDBTransaction&&(t==="done"||t==="store")?!0:t in e}};function R(e){_=e(_)}function J(e){return e===IDBDatabase.prototype.transaction&&!("objectStoreNames"in IDBTransaction.prototype)?function(t,...s){let r=e.call(D(this),t,...s);return L.set(r,t.sort?t.sort():[t]),b(r)}:U().includes(e)?function(...t){return e.apply(D(this),t),b(A.get(this))}:function(...t){return b(e.apply(D(this),t))}}function Q(e){return typeof e=="function"?J(e):(e instanceof IDBTransaction&&z(e),K(e,Y())?new Proxy(e,_):e)}function b(e){if(e instanceof IDBRequest)return H(e);if(w.has(e))return w.get(e);let t=Q(e);return t!==e&&(w.set(e,t),I.set(t,e)),t}var D=e=>I.get(e);function P(e,t,{blocked:s,upgrade:r,blocking:n,terminated:o}={}){let a=indexedDB.open(e,t),l=b(a);return r&&a.addEventListener("upgradeneeded",i=>{r(b(a.result),i.oldVersion,i.newVersion,b(a.transaction),i)}),s&&a.addEventListener("blocked",i=>s(i.oldVersion,i.newVersion,i)),l.then(i=>{o&&i.addEventListener("close",()=>o()),n&&i.addEventListener("versionchange",c=>n(c.oldVersion,c.newVersion,c))}).catch(()=>{}),l}var X=["get","getKey","getAll","getAllKeys","count"],Z=["put","add","delete","clear"],C=new Map;function v(e,t){if(!(e instanceof IDBDatabase&&!(t in e)&&typeof t=="string"))return;if(C.get(t))return C.get(t);let s=t.replace(/FromIndex$/,""),r=t!==s,n=Z.includes(s);if(!(s in(r?IDBIndex:IDBObjectStore).prototype)||!(n||X.includes(s)))return;let o=async function(a,...l){let i=this.transaction(a,n?"readwrite":"readonly"),c=i.store;return r&&(c=c.index(l.shift())),(await Promise.all([c[s](...l),n&&i.done]))[0]};return C.set(t,o),o}R(e=>({...e,get:(t,s,r)=>v(t,s)||e.get(t,s,r),has:(t,s)=>!!v(t,s)||e.has(t,s)}));var E=new Map,x=class{constructor(e,t){this.type="reqRep",this.settings={},this.name="",this.name=e,this.settings=t}async request(e){return d.Request(this.name,e,this.settings.broadcast)}reply(e){return d.Reply(this.name,e,this.settings.broadcast).dispose}dispose(){d.requestListeners.delete(this.name),E.delete(this.name)}static for(e,t){if(!t){let r=E.get(e);if(!r)throw Error("Can't find channel settings");return r}d.ConfigureChannel(e,t.broadcast||!1,t.cache||!1,t.trace||!1);let s=new x(e,t);return E.set(e,s),s}},k="broadcast-sync",ee="browser-message-broker";function te(e){return e.channelName===k}function se(e){return e.senderId!=null&&e.targetId==null}function re(e){return e.senderId!=null&&e.targetId!=null}var g=Math.random().toString(36).substring(2,9);function ne(e,t=1){let s;return(...r)=>{clearTimeout(s),s=setTimeout(()=>{e(...r)},t)}}var m=new Map,ae=class{constructor(){this.trace=!1,this.senderId=g,this.state=new Map,this.subscribers=new Map,this.braodcasts=new Set,this.__bcChannel=new BroadcastChannel(ee),this.__nextMessageAwaters=new Map,this.broadcastedRequests=new Map,this.requestListeners=new Map,this.__bcChannel.onmessage=this.handleBroadcast.bind(this),this.__bcChannel.onmessageerror=this.handleBroadcastError.bind(this),setTimeout(()=>{this.__sendBrokerState(void 0,void 0)},0),this.sendBrokerState=ne(this.__sendBrokerState.bind(this),2)}log(e,t,...s){(this.trace||m.get(t)?.trace)&&console.log(`[${globalThis.constructor.name}(${this.senderId})-${t}] ${e}`,s)}ConfigureChannel(e,t,s,r){m.set(e,{broadcast:t,cache:s,trace:r}),s&&this.state.set(e,void 0),t&&this.braodcasts.add(e)}handleBroadcastError(e){throw Error("BROADCAST FAILED: "+e.data)}__sendBrokerState(e,t){let s=Array.from(this.braodcasts.keys());t&&t.length>0&&(s=s.filter(a=>t.includes(a)));let r={};for(let a of this.state)!a[1]||!s.includes(a[0])||(r[a[0]]=a[1]);let n={id:g,availableState:r,broadcasts:s},o={channelName:k,senderCtx:globalThis.constructor.name,senderId:g,targetId:e,msg:n,channelType:"sync"};this.__bcChannel.postMessage(o),e==null?this.log("Broadcast sync requested","",{brokerState:n}):this.log("Broadcast sync responded","",{targetId:e,brokerState:n})}handleBroadcastSync(e){if(se(e))return this.sendBrokerState(e.senderId,e.msg.broadcasts);if(re(e))for(let t of Object.entries(e.msg.availableState))this.braodcasts.has(t[0])&&this.state.has(t[0])&&this.state.get(t[0])==null&&this.__notifySubscribers(t[0],t[1],e.senderId),this.log("Broadcast sync responce handled","",e.msg)}handleBroadcast(e){if(this.log("Broadcast received",e.data.channelName,e.data),e.data.targetId!=null&&e.data.targetId!==g){this.log("Broadcast ignored (different targetId)",e.data.channelName);return}if(te(e.data))return this.handleBroadcastSync(e.data);switch(e.data.channelType){case"pubSub":this.__notifySubscribers(e.data.channelName,e.data.msg,e.data.senderId);break;case"req":this.bridgeRequest(e.data.channelName,e.data.msg,e.data.senderId);break;case"rep":let t=this.broadcastedRequests.get(e.data.channelName);if(!t)return;t.resolve(e.data.msg),this.broadcastedRequests.delete(e.data.channelName);break}this.log("Broadcast handled",e.data.channelName,e.data)}__configureBroadcast(e){if(!e.channelName)throw new Error("Invalid subscription");this.braodcasts.add(e.channelName);let t=e.dispose;e.dispose=()=>{t(),this.braodcasts.delete(e.channelName)},e.isBroadcast=!0,this.sendBrokerState()}GetState(e){if(e)return this.state.get(e)}async Broadcast(e,t,s){this._broadcast(e,t,"pubSub",s)}async _broadcast(e,t,s,r){let n=m.get(e);this.log(`Message broadcasted (${s}) to ${r||"all brokers"}`,e,t);let o=await Promise.resolve(t),a={channelName:e,senderCtx:globalThis.constructor.name,senderId:g,targetId:r,msg:o,channelType:s};n?.cache&&this.state.set(e,t),this.__bcChannel.postMessage(a)}async Publish(e,t,s){this.log("Message published",e,t),await this.__notifySubscribers(e,t,g),this.braodcasts.has(e)&&this._broadcast(e,t,"pubSub",s)}async nextMessage(e){let t=this.__nextMessageAwaters.get(e);if(t)return t.promise;let s={promise:void 0,resolve:void 0};return s.promise=new Promise(r=>{s.resolve=r}),this.__nextMessageAwaters.set(e,s),s.promise}Subscribe(e,t,s=!1,r=!0){let n=m.get(e),o=!1;n&&(s=n.broadcast||!1,r=n.cache||!0);let a=this.subscribers.get(e)||[],l=t;a.push(l),this.subscribers.set(e,a);let i={channelName:e,isCached:!1,dispose:()=>{let c=this.subscribers.get(e);if(c==null)return;let T=c.indexOf(l);T!==-1&&c.splice(T,1)},publish:(c,T)=>this.Publish(e,c,T),isDisposed:!1};return s&&this.__configureBroadcast(i),r&&this.state.set(e,void 0),i}bridgeRequest(e,t,s){let r=this.requestListeners.get(e);return r?r.handler(t,s):Promise.resolve(void 0)}Request(e,t,s=!1,r){if(s){this._broadcast(e,t,"req",r);let n=this.broadcastedRequests.get(e);n&&n.resolve(void 0);let o,a={promise:new Promise(l=>o=l),resolve:o};return this.broadcastedRequests.set(e,a),a.promise}else{let n=this.requestListeners.get(e);return n?n.handler(t):Promise.resolve(void 0)}}Reply(e,t,s=!1){if(s){let a=t;t=(l,i)=>this._broadcast(e,a(l),"rep",i)}let r=this.requestListeners,n={channelName:e,get isDisposed(){return r.has(e)},isBroadcast:s,handler:t,dispose:void 0};n.dispose=()=>{n.isDisposed=!0,this.requestListeners.get(e)===n&&this.requestListeners.delete(e)};let o=this.requestListeners.get(e);return o&&(o.isDisposed=!0,console.warn("Request listener has been replaced: "+e)),this.requestListeners.set(e,n),n}async __notifySubscribers(e,t,s){let r=this.subscribers.get(e)||[],n=[];for(let o of r)!o||(n.push(Promise.resolve(o(t,s))),this.log("Handler called",e,o));await Promise.all(n),m.get(e)?.cache&&this.state.set(e,t),this.__handleAwaiter(e,t),this.log("Message handled",e,t,this)}__handleAwaiter(e,t){let s=this.__nextMessageAwaters.get(e);!s||(s.resolve(t),this.__nextMessageAwaters.delete(e))}};globalThis.BrowserMessageBroker=globalThis.BrowserMessageBroker||new ae;var d=globalThis.BrowserMessageBroker,M=new Map,h=class{constructor(e,t){this.type="pubSub",this.dispose=()=>{d.subscribers.delete(this.name),M.delete(this.name)},this.name="",this.settings={},this.name=e,this.settings=t}static for(e,t){if(!t){let r=M.get(e);if(!r)throw Error("Can't find channel settings");return r}d.ConfigureChannel(e,t.broadcast||!1,t.cache||!1,t.trace||!1);let s=new h(e,t);return M.set(e,s),s}async send(e,t){d.Publish(this.name,e,t)}static async publish(e,t,s){d.Publish(e,t,s)}static async broadcast(e,t,s){d.Broadcast(e,t,s)}subscribe(e){return d.Subscribe(this.name,e,this.settings.broadcast,this.settings.cache).dispose}getState(){return d.GetState(this.name)}static GetState(e){return d.GetState(e)}nextMessage(){return d.nextMessage(this.name)}static nextMessage(e){return d.nextMessage(e)}};var u={ADD_TODO:"addTodo",TODO_ADDED:"todoAdded",TODO_ERR:"todoErr",MODIFY_TODO:"modifyTodo",COMPLETE_TODO:"completeTodo",TODO_MODIFIED:"todoModified",DEL_TODO:"delTodo",TODO_DELETED:"todoDeleted",GET_ALL_TODOS:"getAllTodos",TODO_SELECTED:"todoSelected",CHECK_DATA_SOURCE:"checkDataSource",DATA_SOURCE_READY:"dataSourceReady"},q=h.for(u.TODO_ADDED,{broadcast:!0,cache:!1}),f=h.for(u.TODO_ERR,{broadcast:!0,cache:!1}),N=h.for(u.TODO_DELETED,{broadcast:!0,cache:!1}),O=h.for(u.TODO_MODIFIED,{broadcast:!0,cache:!1}),j=h.for(u.DATA_SOURCE_READY,{broadcast:!0,cache:!0}),F=h.for(u.ADD_TODO,{broadcast:!0,cache:!1}),V=h.for(u.COMPLETE_TODO,{broadcast:!0,cache:!1}),G=h.for(u.DEL_TODO,{broadcast:!0,cache:!1}),$=h.for(u.MODIFY_TODO,{broadcast:!0,cache:!1}),W=x.for(u.GET_ALL_TODOS,{broadcast:!0}),we=h.for(u.TODO_SELECTED,{broadcast:!0,cache:!0});var p=P("Todos",1,{upgrade(e){e.createObjectStore("todo",{keyPath:"id",autoIncrement:!0}).createIndex("isDone","isDone")}});F.subscribe(le);V.subscribe(ce);G.subscribe(de);$.subscribe(ie);W.reply(oe);async function oe(e){try{return await(await p).getAll("todo")}catch(t){console.log(t),f.send({message:"Can't get all todos",context:{}})}return Promise.resolve([])}async function ie(e){try{let t=await p,s=await t.get("todo",e.id);s.text=e.newText,await t.put("todo",s),O.send(s)}catch{f.send({message:`Can't modify todo. Change: text = '${e.newText}'`,context:{id:e.id}})}}async function de(e){try{await(await p).delete("todo",e.id),N.send(e)}catch{f.send({message:"Can't delete todo",context:e})}}async function ce(e){try{await(await p).put("todo",{...e,isDone:!0}),e.isDone=!0,O.send(e)}catch{f.send({message:"Can't complete todo",context:e})}}async function le(e){if(!e.text||e.text===""){f.send({context:e,message:"Can't add todo without text"});return}let t={text:e.text,isDone:!1};try{let r=await(await p).add("todo",t);t.id=r,q.send(t)}catch{f.send({message:"Can't add todo. ",context:e})}}j.send(!0);})();
//# sourceMappingURL=sharedWorker.js.map
